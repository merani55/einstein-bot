import telebot
import os

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

QUEST = [
    {
        "task": ("Інтелект — це не знання, а уява.» – А. Ейнштейн\n"
                 "Світло відкриває те, що приховано у темряві.\n\n"
                 "У темряві світло ховається за трьома кроками назад.\n"
                 "Розшифруй послання, що стоїть на порозі нових знань:\n"
                 "'Khoor, Zruog!'\n\n"
                 "Порада: подумай про того, хто шукав світло у лінзах і променях."),
        "answer": "hello, world",
        "hint": ("«Інтелект — це не знання, а уява.» – А. Ейнштейн\n"
                 "«Світло відкриває те, що приховано у темряві.»")
    },
    {
        "task": ("Місце, де формувалися думки генія, не в книжках, а в стінах, що зберігають його спокій.\n"
                 "Вулиця, що носить ім'я ремісника, і число, що перевищує п’ятдесят, допоможуть знайти цей дім.\n"
                 "Яка це адреса? Напиши у форматі: Müllerstraße 54."),
        "answer": "müllerstraße 54",
        "hint": ("Подумай про майстерню ремісника та цифру, що часто пов’язана з півстоліттям.")
    },
    {
        "task": ("Місце навчання, де формувалися перші ідеї великого вченого.\n"
                 "Які роки закарбувалися у пам’яті одного генія у стінах, де сходилися перші його думки?\n\n"
                 "Підказка: Це період, коли формувалося майбутнє. Школа, де Ейнштейн пізнавав основи, стоїть і досі у центрі міста.\n"
                 "В її назві поєднано королівську спадщину та класичну освіту."),
        "answer": "1888-1894",
        "hint": ("«Освіта — це те, що залишається після того, як забуваєш все вивчене.»\n"
                 "Подумай про роки, коли формувався геній.")
    },
    {
        "task": ("Знайди кав'ярню, де боротьба між людиною та машиною стає мистецтвом.\n"
                 "Напиши назву першої кав'ярні, що відкриває смак досвіду."),
        "answer": "suuapinga",
        "hint": ("Назва кав'ярні – це звучання, яке нагадує поєднання таємниці та смаку.")
    },
    {
        "task": ("Кав'ярня Men Versus Machine — символ дуелі між природою і технологією.\n"
                 "Що символізує ця боротьба? Напиши одним словом."),
        "answer": "боротьба",
        "hint": ("Подумай про зіткнення сил — людини і машини, природи і технологій.")
    },
    {
        "task": ("Ейнштейн вважав, що життя — це нескінченний потік змін і руху.\n"
                 "Як у формулі, де час і простір переплітаються.\n"
                 "Серед барв і ароматів Віктуалієнмаркту шукай символ вічності, що не підвладний часу.\n"
                 "Який продукт на ринку втілює цей принцип?"),
        "answer": "мед",
        "hint": ("Цей продукт солодкий, тягучий і довго зберігається — мов теорія, що переживає століття.")
    }
]

user_state = {}

@bot.message_handler(commands=['start'])
def start(message):
    user_state[message.chat.id] = 0
    bot.send_message(message.chat.id, "Ласкаво просимо в квест ‘Код Ейнштейна’! Напиши 'Почати', щоб розпочати.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_id = message.chat.id
    step = user_state.get(chat_id, 0)

    # Якщо квест завершено
    if step >= len(QUEST):
        bot.send_message(chat_id, "Квест завершено! Дякуємо за участь.")
        return

    current_task = QUEST[step]

    # Перший крок — чекати "почати"
    if step == 0 and message.text.lower() != "почати":
        bot.send_message(chat_id, "Напиши 'Почати', щоб розпочати квест.")
        return

    if step == 0 and message.text.lower() == "почати":
        bot.send_message(chat_id, current_task["task"])
        user_state[chat_id] = 1
        return

    # Для інших кроків
    if step > 0:
        user_answer = message.text.lower().strip()

        # Запит підказки
        if user_answer == "підказка":
            bot.send_message(chat_id, current_task["hint"])
            return

        # Перевірка відповіді з нормалізацією
        def normalize(text):
            return text.lower().replace(" ", "").replace("’", "'").replace("ё", "е").replace("ä", "a").replace("ü", "u").replace("ö", "o")

        if normalize(user_answer) == normalize(current_task["answer"]):
            user_state[chat_id] += 1
            if user_state[chat_id] < len(QUEST):
                bot.send_message(chat_id, "Правильно! Ось наступне завдання:")
                bot.send_message(chat_id, QUEST[user_state[chat_id]]["task"])
            else:
                bot.send_message(chat_id, "Вітаємо! Ви пройшли квест ‘Код Ейнштейна’!")
        else:
            bot.send_message(chat_id, "Спробуй ще раз або напиши 'Підказка' для допомоги.")

if __name__ == "__main__":
    bot.infinity_polling()
