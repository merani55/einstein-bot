import telebot
import os

# Отримуємо токен з змінного середовища
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("BOT_TOKEN не встановлено у середовищі!")

bot = telebot.TeleBot(TOKEN)

# Список завдань
QUEST = [
    {
        "task": "Точка 1 — Початок подорожі.\n\nУ темряві світло ховається за трьома кроками назад.\nРозшифруй послання, що стоїть на порозі нових знань:\n'Khoor, Zruog!'\n\nПорада: Подумай про того, хто шукав світло у лінзах і променях.",
        "answer": "hello world",
        "hint": "«Інтелект — це не знання, а уява.» – А. Ейнштейн\n«Світло відкриває те, що приховано у темряві.»\n\nНаступний крок: Знайди місце, де фізика ставала мистецтвом світла. Колись тут шліфували лінзи, сьогодні — це будівля зі скляним обличчям."
    },
    {
        "task": "Точка 2 — Місце навчання.\n\nЯкі роки закарбувалися у пам’яті одного генія у стінах, де сходилися перші його думки?\n\nПідказка: Це період, коли формувалося майбутнє. Школа, де Ейнштейн пізнавав основи, стоїть і досі у центрі міста. В її назві поєднано королівську спадщину та класичну освіту.",
        "answer": "1888-1894",
        "hint": "«Освіта – це те, що залишається після того, як забуваєш усе вивчене.»\n\nШукай місце, де молоді уми досі навчаються — поруч із музеєм та старовинним театром."
    },
    {
        "task": "Точка 3 — Таємниця смаку.\n\nСеред ароматів, що сплітаються в танці прянощів, знайди смак, який спалахує яскравіше за інші.\n\nЯк називається ця пряність, що пробуджує пам’ять?\n\nПідказка: Це популярний інгредієнт у випічці, який часто асоціюється з теплом. Шукай заклад із назвою, що звучить арктично, хоча всередині затишно й смачно.",
        "answer": "кориця",
        "hint": "«Солодкість життя в дрібницях.»\n\nНаступна точка — кав’ярня з назвою мовою Гренландії, розташована на Мюллерштрассе."
    },
    {
        "task": "Точка 4 — Машина vs Людина.\n\nЩо криється за боротьбою двох світів — людини та технології?\nВідгадай слово, що описує їх нескінченний танець.\n\nПідказка: Заклад, де кава — як алгоритм, а інтер’єр — як кодування. Назва протиставляє людське машинному. Шукай на межі креативного району. ",
        "answer": "боротьба",
        "hint": "«Технології – лише інструмент, людина творить справжнє.»\n\nНаступна точка — кафе, де назва вказує на конфлікт двох сутностей."
    },
    {
        "task": "Фінал — Солодка істина.\n\nВсе, що вивчав Ейнштейн, перетворилось на формулу. Але істинна формула — у русі життя.\n\nНа місці, де барви, звуки й аромати змінюються щомиті, знайди продавця, що торгує тим, що не старіє.\n\nЯкий продукт символізує вічність і непідвладний часу?",
        "answer": "мед",
        "hint": "«Життя рухається, як мед — солодко і невпинно.»\n\nТебе вітає фінал — ринок у самому серці міста, де зустрічаються традиція і смак."
    }
]

# Стан кожного користувача
user_state = {}

def normalize(text):
    return text.strip().lower().replace(",", "").replace(".", "").replace("!", "").replace("’", "'")

@bot.message_handler(commands=['start'])
def start(message):
    user_state[message.chat.id] = 0
    bot.send_message(message.chat.id, "Ласкаво просимо в квест «Код Ейнштейна»! Напиши 'Почати', щоб розпочати.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_id = message.chat.id
    text = normalize(message.text)

    if chat_id not in user_state:
        user_state[chat_id] = 0

    step = user_state[chat_id]

    if step == 0 and text != "почати":
        bot.send_message(chat_id, "Напиши 'Почати', щоб розпочати квест.")
        return

    if step == 0 and text == "почати":
        bot.send_message(chat_id, QUEST[0]["task"])
        user_state[chat_id] = 1
        return

    if 1 <= step <= len(QUEST):
        current = QUEST[step - 1]
        if normalize(text) == normalize(current["answer"]):
            bot.send_message(chat_id, current["hint"])
            user_state[chat_id] += 1
            if user_state[chat_id] <= len(QUEST):
                next_task = QUEST[user_state[chat_id] - 1]["task"]
                bot.send_message(chat_id, next_task)
        else:
            bot.send_message(chat_id, "Спробуй ще раз або звернись до підказки.")
        return

    if step > len(QUEST):
        bot.send_message(chat_id, "Квест завершено! Дякуємо за участь.")

bot.polling()
