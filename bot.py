import telebot
import os

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

QUEST = [
    {
        "task": (
            "У темряві світло ховається за трьома кроками назад.\n"
            "Розшифруй послання, що стоїть на порозі нових знань:\n"
            "'Khoor, Zruog!'\n\n"
            "Порада: подумай про того, хто шукав світло у лінзах і променях."
        ),
        "answer": "hello, world",
        "hint": (
            "Той, хто вивчає бачення невидимого, знає, як відкрити двері у світло.\n"
            "Пам’ятай: ключ у відступі, де трьох літер достатньо, щоб відкрити таємницю."
        )
    },
    {
        "task": (
            "Де молодий розум шукав відповіді у віці між дитинством і юністю?\n"
            "Знайди роки, коли майбутній геній черпав знання зі старих стін, де шкільні дзвони гучно звучали.\n"
            "Порада: це був період між кінцем вісімдесятих і початком дев’яностих."
        ),
        "answer": "1888-1894",
        "hint": (
            "Час тече, але мудрість лишається між кам’яними рядами того, що колись було храмом знань.\n"
            "Роки формують особистість так само, як ріки формують берег."
        )
    },
    {
        "task": (
            "Відчуй аромат, що кружляє у повітрі, немов загадка, захована в пряній хмарі.\n"
            "Знайди смак, що має гостру ноту і дарує тепло – це слово відкриє наступний шлях.\n"
            "Порада: цей смак – давній друг осені, він мов обійми для душі."
        ),
        "answer": "кориця",
        "hint": (
            "У затишних куточках міста, де зустрічаються аромат і смак, приховано наступний ключ.\n"
            "Подумай про смак, який ти можеш відчути у теплої випічки, що шепоче про домашній затишок."
        )
    },
    {
        "task": (
            "Назва цього місця мовить про боротьбу двох світів: один з плоті і крові, інший – з металу і коду.\n"
            "Що ж символізує це протистояння? Напиши слово, яке відображає суть назви.\n"
            "Порада: подумай про вічну битву за контроль і душу."
        ),
        "answer": "боротьба",
        "hint": (
            "Машини можуть виконувати команди, але тільки людина може творити сенс.\n"
            "У центрі цієї битви народжується справжня сутність."
        )
    },
    {
        "task": (
            "Шукаючи істину в постійному русі життя, зверни увагу на ринок, де вічне ховається серед змін.\n"
            "Що ж на цьому базарі не піддається часу і зберігає свою цінність?\n"
            "Порада: це золотиста солодкість, що не знає тління, мов формула вічності."
        ),
        "answer": "мед",
        "hint": (
            "Вічність може бути солодкою, але її треба вміти розгледіти.\n"
            "Вона прихована у маленькій краплині, що зігріває серце і дарує життя."
        )
    }
]

user_state = {}

@bot.message_handler(commands=['start'])
def start(message):
    user_state[message.chat.id] = 0
    bot.send_message(message.chat.id, "Ласкаво просимо в квест ‘Код Ейнштейна’! Напиши 'Почати', щоб розпочати.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_id = message.chat.id
    step = user_state.get(chat_id, 0)

    if step >= len(QUEST):
        bot.send_message(chat_id, "Квест завершено! Дякуємо за участь.")
        return

    current_task = QUEST[step]

    if step == 0 and message.text.lower() != "почати":
        bot.send_message(chat_id, "Напиши 'Почати', щоб розпочати квест.")
        return

    if step == 0 and message.text.lower() == "почати":
        bot.send_message(chat_id, current_task["task"])
        user_state[chat_id] = 1
        return

    if step > 0:
        if message.text.lower() == current_task["answer"]:
            bot.send_message(chat_id, current_task["hint"])
            user_state[chat_id] += 1

            if user_state[chat_id] < len(QUEST):
                next_task = QUEST[user_state[chat_id]]
                bot.send_message(chat_id, next_task["task"])
            else:
                bot.send_message(chat_id, "Квест завершено! Дякуємо за участь.")
        else:
            bot.send_message(chat_id, "Спробуй ще раз або подумай над підказкою.")

bot.polling(none_stop=True)


